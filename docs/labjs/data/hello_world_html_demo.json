{
  "components": {
    "1": {
      "id": "1",
      "type": "lab.html.Screen",
      "files": [],
      "responses": [
        {
          "label": "",
          "event": "",
          "target": "",
          "filter": ""
        }
      ],
      "parameters": [
        {
          "name": "",
          "value": "",
          "type": "string"
        }
      ],
      "messageHandlers": [
        {
          "title": "",
          "message": "",
          "code": ""
        }
      ],
      "title": "hello_world_center",
      "content": "<!-- メインの部分を<main></main>の間に記述する。なお，ここでは書いていないが<header></header>でヘッダー，<footer></footer>でフッターも記述できる。 -->\n\n<!-- lab.jsにデフォルトで用意されている水平方向の中央寄せ（content-horizontal-center）と垂直方向の中央寄せ（content-vertical-center）をclassで指定すると，<main></main>内の画面が中央寄せになる。 -->\n\n<main class = \"content-horizontal-center content-vertical-center\">\n  <div>\n    <p>\n      Hello, world!\n    </p>\n  </div>\n</main>",
      "_tab": "Content",
      "timeout": "1000"
    },
    "2": {
      "id": "2",
      "type": "lab.html.Screen",
      "files": [],
      "responses": [
        {
          "label": "",
          "event": "",
          "target": "",
          "filter": ""
        }
      ],
      "parameters": [
        {
          "name": "",
          "value": "",
          "type": "string"
        }
      ],
      "messageHandlers": [
        {
          "title": "",
          "message": "",
          "code": ""
        }
      ],
      "title": "hello_world_large_font_size",
      "content": "<main class = \"content-horizontal-center content-vertical-center\">\n  <div>\n    <!-- style = \"font-size:○vh\"でフォントサイズを変更する（vhは縦の画面サイズ(Y）を100vhとした時の割合でサイズ指定する方法。画面サイズと刺激の比が環境間で揃う） -->\n    <p style = \"font-size: 10vh;\">\n      Hello, world!\n    </p>\n  </div>\n</main>",
      "_tab": "Content",
      "timeout": "1000"
    },
    "3": {
      "id": "3",
      "type": "lab.html.Screen",
      "files": [],
      "responses": [
        {
          "label": "",
          "event": "",
          "target": "",
          "filter": ""
        }
      ],
      "parameters": [
        {
          "name": "",
          "value": "",
          "type": "string"
        }
      ],
      "messageHandlers": [
        {
          "title": "",
          "message": "",
          "code": ""
        }
      ],
      "title": "hello_world_medium_font_size",
      "content": "<main class = \"content-horizontal-center content-vertical-center\">\n  <div>\n    <!-- style = \"font-size:○vh\"でフォントサイズを変更する（vhは縦の画面サイズ(Y）を100vhとした時の割合でサイズ指定する方法。画面サイズと刺激の比が環境間で揃う） -->\n    <p style = \"font-size: 5vh;\">\n      Hello, world!\n    </p>\n  </div>\n</main>",
      "_tab": "Content",
      "timeout": "1000"
    },
    "11": {
      "id": "11",
      "type": "lab.html.Screen",
      "files": [],
      "responses": [
        {
          "label": "",
          "event": "",
          "target": "",
          "filter": ""
        }
      ],
      "parameters": [
        {
          "name": "",
          "value": "",
          "type": "string"
        }
      ],
      "messageHandlers": [
        {
          "title": "",
          "message": "",
          "code": ""
        }
      ],
      "title": "hello_world_right",
      "content": "<main class = \"content-horizontal-right content-vertical-center\">\n  <div>\n    <p>\n      Hello, world!\n    </p>\n  </div>\n</main>",
      "_tab": "Behavior",
      "timeout": "1000"
    },
    "12": {
      "id": "12",
      "type": "lab.html.Screen",
      "files": [],
      "responses": [
        {
          "label": "",
          "event": "",
          "target": "",
          "filter": ""
        }
      ],
      "parameters": [
        {
          "name": "",
          "value": "",
          "type": "string"
        }
      ],
      "messageHandlers": [
        {
          "title": "",
          "message": "",
          "code": ""
        }
      ],
      "title": "hello_world_small_font_size",
      "content": "<main class = \"content-horizontal-center content-vertical-center\">\n  <div>\n    <!-- style = \"font-size:○vh\"でフォントサイズを変更する（vhは縦の画面サイズ(Y）を100vhとした時の割合でサイズ指定する方法。画面サイズと刺激の比が環境間で揃う） -->\n    <p style = \"font-size: 1vh;\">\n      Hello, world!\n    </p>\n  </div>\n</main>",
      "_tab": "Content",
      "timeout": "1000"
    },
    "13": {
      "id": "13",
      "type": "lab.html.Screen",
      "files": [],
      "responses": [
        {
          "label": "",
          "event": "",
          "target": "",
          "filter": ""
        }
      ],
      "parameters": [
        {
          "name": "",
          "value": "",
          "type": "string"
        }
      ],
      "messageHandlers": [
        {
          "title": "",
          "message": "",
          "code": ""
        }
      ],
      "title": "hello_world_color_rgb",
      "content": "<main class = \"content-horizontal-center content-vertical-center\">\n  <div>\n    <p style=\"color: #0000ff;\">\n      Hello, world!\n    </p>\n  </div>\n</main>",
      "_tab": "Content",
      "timeout": "1000"
    },
    "14": {
      "id": "14",
      "type": "lab.html.Screen",
      "files": [],
      "responses": [
        {
          "label": "",
          "event": "",
          "target": "",
          "filter": ""
        }
      ],
      "parameters": [
        {
          "name": "",
          "value": "",
          "type": "string"
        }
      ],
      "messageHandlers": [
        {
          "title": "",
          "message": "",
          "code": ""
        }
      ],
      "title": "hello_world_color_name",
      "content": "<main class = \"content-horizontal-center content-vertical-center\">\n  <div>\n    <p style=\"color: tomato;\">\n      Hello, world!\n    </p>\n  </div>\n</main>",
      "_tab": "Content",
      "timeout": "1000"
    },
    "root": {
      "id": "root",
      "title": "root",
      "type": "lab.flow.Sequence",
      "children": [
        "1",
        "11",
        "12",
        "3",
        "2",
        "14",
        "13"
      ],
      "parameters": [],
      "plugins": [
        {
          "type": "lab.plugins.Metadata"
        }
      ],
      "metadata": {
        "title": "hello_world_html_demo",
        "description": "",
        "repository": "",
        "contributors": "Masanori Kobayashi"
      }
    }
  },
  "version": [
    20,
    2,
    3
  ],
  "files": {
    "files": {
      "index.html": {
        "content": "data:text/html,%3C!doctype%20html%3E%0A%3Chtml%3E%0A%3Chead%3E%0A%20%20%3Cmeta%20charset%3D%22utf-8%22%3E%0A%20%20%3Ctitle%3EExperiment%3C%2Ftitle%3E%0A%20%20%3C!--%20viewport%20setup%20--%3E%0A%20%20%3Cmeta%20name%3D%22viewport%22%20content%3D%22width%3Ddevice-width%2C%20initial-scale%3D1%22%3E%0A%20%20%3C!--%20lab.js%20library%20and%20experiment%20code%20--%3E%0A%20%20%24%7B%20header%20%7D%0A%3C%2Fhead%3E%0A%3Cbody%3E%0A%20%20%3C!--%20If%20you'd%20rather%20have%20a%20container%20with%20a%20fixed%20width%0A%20%20%20%20%20%20%20and%20variable%20height%2C%20try%20removing%20the%20fullscreen%20class%20below%20--%3E%0A%20%20%3Cdiv%20class%3D%22container%20fullscreen%22%20data-labjs-section%3D%22main%22%3E%0A%20%20%20%20%3Cmain%20class%3D%22content-vertical-center%20content-horizontal-center%22%3E%0A%20%20%20%20%20%20%3Cdiv%3E%0A%20%20%20%20%20%20%20%20%3Ch2%3ELoading%20Experiment%3C%2Fh2%3E%0A%20%20%20%20%20%20%20%20%3Cp%3EThe%20experiment%20is%20loading%20and%20should%20start%20in%20a%20few%20seconds%3C%2Fp%3E%0A%20%20%20%20%20%20%3C%2Fdiv%3E%0A%20%20%20%20%3C%2Fmain%3E%0A%20%20%3C%2Fdiv%3E%0A%3C%2Fbody%3E%0A%3C%2Fhtml%3E%0A",
        "source": "library"
      },
      "style.css": {
        "content": "data:text/css,%2F*%20Please%20define%20your%20custom%20styles%20here%20*%2F",
        "source": "library"
      }
    },
    "bundledFiles": {
      "lib/lab.js": {
        "type": "application/javascript"
      },
      "lib/lab.js.map": {
        "type": "text/plain"
      },
      "lib/lab.fallback.js": {
        "type": "application/javascript"
      },
      "lib/lab.legacy.js": {
        "type": "application/javascript"
      },
      "lib/lab.legacy.js.map": {
        "type": "text/plain"
      },
      "lib/lab.css": {
        "type": "text/css"
      },
      "lib/loading.svg": {
        "type": "image/svg+xml"
      }
    }
  }
}